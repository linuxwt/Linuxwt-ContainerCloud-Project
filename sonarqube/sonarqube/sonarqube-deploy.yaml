apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube
  namespace: devops
  labels:
    app: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      serviceAccountName: sonarqube
      initContainers:
      - name: init-sysctl
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sysctl", "-w", "vm.max_map_count=524288"] 
        securityContext:
          privileged: true
      containers:
      - name: sonarqube
        image: sonarqube:lts
        ports:
        - containerPort: 9000
        env:
          - name: SONARQUBE_JDBC_USERNAME
            valueFrom:         
              configMapKeyRef:   
                name: sonarqube-database-connection-info
                key: SONARQUBE_JDBC_USERNAME
          - name: SONARQUBE_JDBC_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: sonarqube-database-connection-info
                key: SONARQUBE_JDBC_PASSWORD
          - name: SONARQUBE_JDBC_URL
            valueFrom:
              configMapKeyRef:
                name: sonarqube-database-connection-info
                key: SONARQUBE_JDBC_URL
        volumeMounts:
        - mountPath: /opt/sonarqube/conf
          name: conf
        - mountPath: /opt/sonarqube/data
          name: data
        - mountPath: /opt/sonarqube/extensions
          name: extensions
      volumes:
      - name: conf
        persistentVolumeClaim:
          claimName: sonarqube-conf
      - name: data
        persistentVolumeClaim:
          claimName: sonarqube-data
      - name: extensions
        persistentVolumeClaim:
          claimName: sonarqube-extensions
      nodeSelector:
        app: devops
