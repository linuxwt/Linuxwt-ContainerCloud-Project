kind: ConfigMap
apiVersion: v1
metadata:
  name: front-configmap
  namespace: front
data:
  nginx.conf: |-
    user  nginx;
    worker_processes  auto;

    error_log  /var/log/nginx/error.log notice;
    pid        /var/run/nginx.pid;


    events {
        worker_connections  1024;
    }


    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;
        
        client_header_buffer_size 32k;
        large_client_header_buffers 4 32k;
        
        # upstream keycloak {
          # server keycloak.k8s:443 max_fails=3 fail_timeout=5s;
        # }
        
        server_tokens off;
        
        server {
            listen       80;
            listen  [::]:80;
            server_name  localhost;
            
            #access_log  /var/log/nginx/host.access.log  main;

            location / {
                root   /usr/share/nginx/html;
                index  index.html index.htm;
            }
            
            location /kubernetes/ {
                proxy_pass https://10.235.9.40:16443/;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forward-For $remote_addr;
                proxy_set_header X-Real-IP  $remote_addr;
                add_header Access-Control-Allow-Methods *;
                add_header Access-Control-Max-Age 3600;
                add_header Access-Control-Allow-Credentials true;
                add_header Access-Control-Allow-Headers $http_access_control_request_headers;
                add_header Access-Control-Allow-Origin *;
            }
            
            location /keycloak/ {
                proxy_http_version 1.1;
                proxy_set_header Connection "";
                # rewrite ^/keycloak/(.*)$ /$1 break;
                proxy_pass https://keycloak.k8s/;
            }
            
            location /hasura {
                proxy_http_version 1.1;
                proxy_set_header Connection "";
                proxy_pass http://hasura/v1/graphql;
            }
            
            location /aiops {
                proxy_http_version 1.1;
                proxy_pass http://10.235.9.220:9919/;
            }
            
            location /dbpooling {
                proxy_http_version 1.1;
                proxy_pass http://10.235.8.138/;
            }
            
            location /rancher {
                proxy_http_version 1.1;
                proxy_pass https://10.235.9.41:1443/;
            }
            
            #error_page  404              /404.html;

            # redirect server error pages to the static page /50x.html
            #
            error_page   500 502 503 504  /50x.html;
            location = /50x.html {
                root   /usr/share/nginx/html;
            }

            # proxy the PHP scripts to Apache listening on 127.0.0.1:80
            #
            #location ~ \.php$ {
            #    proxy_pass   http://127.0.0.1;
            #}

            # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
            #
            #location ~ \.php$ {
            #    root           html;
            #    fastcgi_pass   127.0.0.1:9000;
            #    fastcgi_index  index.php;
            #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
            #    include        fastcgi_params;
            #}

            # deny access to .htaccess files, if Apache's document root
            # concurs with nginx's one
            #
            #location ~ /\.ht {
            #    deny  all;
            #}
        }
        #include /etc/nginx/conf.d/*.conf;
    }